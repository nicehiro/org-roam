:PROPERTIES:
:ID:       158CDB63-EAF8-4C9E-9F69-3800BC32D30B
:END:
#+title: Git Submodules
#+filed:
#+OPTIONS: toc:nil
#+filetags: :git:Users:wangfangyuan:Documents:roam:org_roam:

* Description
在 Git 项目中，可以添加此主项目的子项目。这样做的好处有：
1. 将不同的代码放在不同的项目中管理，对子项目的更新不必显示在主项目的更新日志中。
2. 可以在不同的项目中添加不同的子项目，高效的使用代码。


可以使用
#+begin_src sh
git submodule add git@github.com:url_to/awesome_submodule.git path_to_awesome_submodule
#+end_src

添加完之后会有两个地方的改动： =.gitmodules= 文件添加这个模块相关信息（远程仓库地址，本地存放目录和版本号）
和存放子模块的目录。

使用
#+begin_src sh
git submodule init
#+end_src

将子模块代码从远程拉下来，存放到指定位置，并切换到指定版本。

当你在子模块进行改动时，直接在主仓库进行 =commit= 不会对子模块有任何影响，
需要在子模块下进行提交。而此时，虽然子模块已经更新了，但主模块仍旧指向子模块的老版本。
也就是说，此时子模块和主仓库指向子模块的版本号不同。
如果想要更新主仓库下子模块的版本，只需要在主仓库进行 =add= =commit= 操作即可。

使用
#+begin_src sh
git submodule update
#+end_src
更新子模块。


* Ref
- [[https://gist.github.com/gitaarik/8735255][Git submodules basic explanation]]
